(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'Quintin_Leong'"
p3
sS'layer'
p4
S'/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/profile.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# try something like\n\n@auth.requires_login()\ndef index():\n    user_id = request.args(0) or auth.user.id\n    information = get_profile(user_id)\n    return dict(user_id=user_id, info=information)\n\n@auth.requires_login()\ndef view_profile():\n    user_id = request.args(0) or auth.user.id\n    information = get_profile(user_id)\n    if(information == None):\n        redirect(URL(\'profile\', \'create_profile\'))\n\n    friend = None\n    if(user_id != auth.user_id):\n        friend = is_friend(auth.user_id, user_id)\n    else:\n        friend = False\n\n    form = SQLFORM.factory(Field(\'review\', requires=IS_NOT_EMPTY()))\n    if(form.process().accepted):\n        review = form.vars.review\n        db.review.insert(friend_id=auth.user_id, user_id=user_id, review_content=review)\n        redirect(URL(\'profile\', \'view_profile\', args=[user_id]))\n\n    reviews = get_reviews(user_id)\n\n    roomies = get_roomies(user_id)\n    friend_info = {}\n    for row in roomies:\n        lookup = row.user_id if row.user_id != auth.user.id else row.friend_id\n        the_name = get_user_name(lookup)\n        the_pic = db(db.user_profile.user_id==lookup).select().first().image\n        friend_info[lookup] = [the_name, the_pic]\n\n    return dict(user_id=user_id, profile=information, friend=friend, form=form, reviews=reviews,roomies=roomies, friend_info=friend_info)\n\n@auth.requires_login()\ndef create_profile():\n    user_id = auth.user.id\n    form = SQLFORM(db.user_profile)\n\n    if(form.process().accepted):\n        redirect(URL(\'profile\',\'view_profile\',args=(user_id)))\n\n    return dict(form=form)\n\n\n@auth.requires_login()\ndef edit_profile():\n    user_id = auth.user.id\n    profile = db(db.user_profile.user_id==user_id).select().first()\n    form = SQLFORM(db.user_profile, profile)\n\n    #Add a cancel button that takes user back to their profile\n    form.add_button(\'Cancel\', URL(\'profile\', \'view_profile\'))\n\n    if(form.process().accepted):\n        redirect(URL(\'profile\',\'view_profile\',args=(user_id)))\n    return dict(form=form)\n\n@auth.requires_login()\ndef request_roomie():\n    roomie = request.args[0]\n    user = auth.user.id\n\n    exist = db((db.roomies.friend_id==roomie)&(db.roomies.user_id==user)).select().first()\n    if(exist == None):\n        db.roomies.insert(user_id=user, friend_id=roomie)\n\n    redirect(URL(\'profile\',\'view_profile\',args=[roomie]))\n\n@auth.requires_login()\ndef view_pending_request():\n    request = get_pending_request()\n    names = {}\n    for row in request:\n        names[row.user_id] = get_user_name(row.user_id)\n    return dict(requests=request,names=names)\n\n@auth.requires_login()\ndef accept_request():\n    user_id = auth.user.id\n    friend_id = request.args[0]\n    row_id = db((db.roomies.friend_id==user_id)&(db.roomies.user_id==friend_id)).select(db.roomies.id).first()\n    db.executesql("UPDATE roomies SET accepted=1 WHERE id = " + str(row_id.id) + " ;")\n    redirect(URL(\'profile\',\'view_pending_request\'))\n\n@auth.requires_login()\ndef decline_request():\n    user_id = auth.user.id\n    friend_id = request.args[0]\n    row_id = db((db.roomies.friend_id==user_id)&(db.roomies.user_id==friend_id)).select(db.roomies.id).first()\n    db.executesql("DELETE FROM roomies WHERE id = " + str(row_id.id) + " ;")\n    redirect(URL(\'profile\',\'view_pending_request\'))\n\ndef get_user_name(user_id):\n    query = db(db.user_profile.user_id==user_id).select(db.user_profile.first_name, db.user_profile.last_name).first()\n    name = str(query.first_name) + " " + str(query.last_name)\n    return name\n\ndef get_pending_request():\n    query = db((db.roomies.friend_id==auth.user.id)&(db.roomies.accepted==0)).select()\n    return query\n\ndef get_profile(user_id):\n    profile = db(db.user_profile.user_id==user_id).select().first()\n    return profile\n\ndef has_profile_image(user_id):\n    image = db(db.user_profile.user_id==user_id).select(db.user_profile.image).first()\n    if(image == \'\'):\n        return True\n    else:\n        return False\n\ndef is_friend(user_id, friend_id):\n    query = db((db.roomies.user_id==user_id)&(db.roomies.accepted==1)).select()\n    if(query != None):\n        for row in query:\n            if friend_id == row.friend_id:\n                return True\n    else:\n        return False\n    return False\n\ndef get_reviews(user):\n    reviews = db(db.review.user_id==user).select()\n    return reviews\n\ndef get_roomies(user_id):\n    friends = db((db.roomies.friend_id==user_id)|(db.roomies.user_id==user_id)).select()\n    return friends\nresponse._vars=response._caller(view_profile)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Applications/web2py.app/Contents/Resources/gluon/restricted.py", line 224, in restricted\n  File "/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/profile.py", line 137, in <module>\n  File "/Applications/web2py.app/Contents/Resources/gluon/globals.py", line 392, in <lambda>\n  File "/Applications/web2py.app/Contents/Resources/gluon/tools.py", line 3439, in f\n  File "/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/profile.py", line 13, in view_profile\n  File "/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/profile.py", line 110, in get_profile\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 10749, in select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 2472, in select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1868, in select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1767, in _select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1544, in expand\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1440, in EQ\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1555, in expand\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 2012, in represent\nValueError: invalid literal for long() with base 10: \'Quintin_Leong\'\n'
p11
s.