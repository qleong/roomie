(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'Quintin Leong'"
p3
sS'layer'
p4
S'/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/message.py'
p5
sS'code'
p6
S'__author__ = \'Quintin\'\n\n@auth.requires_login()\ndef index():\n    return dict()\n\n@auth.requires_login()\ndef view_conversations():\n    user_id = auth.user.id\n    conversations = get_conversations(user_id)\n\n    for conversation in conversations:\n        name = None\n        if(int(conversation.recipient) == int(user_id)):\n            name = get_user_name(conversation.sender)\n        elif(int(conversation.sender) == int(user_id)):\n            name = get_user_name(conversation.recipient)\n        conversation.name = name\n\n    return dict(conversations=conversations)\n\n@auth.requires_login()\ndef send_message():\n    sender = auth.user.id\n    recipient = request.args[0]\n\n    conversation = get_existing_conversation(sender, recipient)\n    conversation_id = conversation.id if conversation.id != None else None\n    #If conversation between users exist, just go to the thread\n    if(conversation != None):\n        redirect(URL(\'message\', \'view_messages\', args=[conversation_id]))\n\n    #Otherwise start a new conversation\n    form = SQLFORM.factory(Field(\'topic\',label=\'Title\',),\n                           Field(\'message_content\', \'text\', label=\'Message\'),\n                           )\n    form.add_button(\'Cancel\', URL(\'profile\', \'view_profile\', args=[recipient]))\n\n    if(form.process().accepted):\n        #Add a new conversation and insert one message_item, redirect to the conversation thread\n        conversation_id = db.conversation.insert(sender=sender, recipient=recipient, topic=form.vars.topic)\n        db.message_item.insert(sender=sender, recipient=recipient, conversation_id=conversation_id,body=form.vars.body)\n        redirect(URL(\'profile\', \'view_profile\', args=[recipient]))\n\n    return dict(form=form)\n\ndef view_messages():\n    conversation_id = request.args[0]\n    messages = get_messages(conversation_id)\n    if(messages != None):\n        sender = get_user_name(messages[0].sender)\n        recipient = get_user_name(messages[0].recipient)\n\n    form = SQLFORM.factory(Field(\'message\', \'text\',required=IS_NOT_EMPTY()))\n    if(form.process().accepted):\n        user = auth.user_id\n        receive = sender if sender != user else recipient\n        db.message_item.insert(sender=user,recipient=receive,conversation_id=conversation_id,body=form.vars.body)\n        redirect(URL(\'message\',\'view_messages\',args=[conversation_id]))\n    return dict(messages=messages,sender=sender,recipient=recipient,form=form)\n\n\ndef get_messages(conversation_id):\n    query = db(db.message_item.conversation_id==conversation_id).select(orderby=~db.message_item.ts_sent)\n    return query\n\ndef get_conversations(user_id):\n    conversations = db((db.conversation.recipient==user_id)|(db.conversation.sender==user_id)).select(db.conversation.id, \\\n            db.conversation.sender,db.conversation.recipient, db.conversation.topic)\n    return conversations\n\ndef get_user_name(user_id):\n    query = db(db.user_profile.user_id==user_id).select(db.user_profile.first_name, db.user_profile.last_name).first()\n    name = query.first_name + " " + query.last_name\n    return name\n\ndef get_existing_conversation(user1, user2):\n    result = db(((db.conversation.sender==user1)&(db.conversation.recipient==user2)|\\\n        ((db.conversation.sender==user2)&(db.conversation.recipient==user1)))).select(db.conversation.id).first()\n    return result\n\nresponse._vars=response._caller(view_messages)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Applications/web2py.app/Contents/Resources/gluon/restricted.py", line 224, in restricted\n  File "/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/message.py", line 82, in <module>\n  File "/Applications/web2py.app/Contents/Resources/gluon/globals.py", line 392, in <lambda>\n  File "/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/message.py", line 52, in view_messages\n  File "/Applications/web2py.app/Contents/Resources/applications/Roomie/controllers/message.py", line 73, in get_user_name\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 10749, in select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 2472, in select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1868, in select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1767, in _select\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1544, in expand\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1440, in EQ\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 1555, in expand\n  File "/Applications/web2py.app/Contents/Resources/gluon/dal.py", line 2012, in represent\nValueError: invalid literal for long() with base 10: \'Quintin Leong\'\n'
p11
s.